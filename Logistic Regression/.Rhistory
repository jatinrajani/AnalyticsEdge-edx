setwd("~/")
pp=read.csv("Untitled1.csv")
pp=read.csv("Untitled 1.csv")
str(pp)
pp$RS=-804.63+1584.91*(pp$SLG)+2737.77(pp$OBP)
pp$RS=-804.63+1584.91*(SLG)+2737.77*(OBP)
pp$RS=-804.63+1584.91*(pp$SLG)+2737.77*(pp$OBP)
str(pp)
model=lm(RS~OBP+SLG+Salary,data=pp)
sumary(model)
summary(model)
max(pp$RS)
(pp$RS)[979.0476]
(pp$Player.Name)[979.0476]
pp$RS
table(pp$RS,pp$Salary)
table(pp$RS,pp$Player.Name)
teamRank = c(1,2,3,3,4,4,4,4,5,5)
wins2012=c(94,88,95,88,93,94,98,94)
regularwins2013=c(97,97,92,93,92,96,94,96,92,90)
cor(teamRank,wins2012)
wins2012=c(94,88,95,88,93,94,98,97,93,94)
cor(teamRank,wins2012)
cor(teamRank,regularwins2013)
setwd("~/Mitedx/Logistic Regression")
log=read.csv("quality.csv")
str(log)
table(log$PoorCare)
install.packages("caTools")
library("caTools")
set.seed(88)
split=sample.split(log$PoorCare,SplitRatio=0.75)
split
qualityTrain=subset(log,split==TRUE)
qualityTest=subset(log,split==FALSE)
qualityTrain
nrow(qualityTrain)
nrow(qualityTest)
model=glm(PoorCare~OfficeVisits+Narcotics,data=qualityTrain,family = bionomial)
model=glm(PoorCare~OfficeVisits+Narcotics,data=qualityTrain,family = binomial)
summary(model)
qualityPredict=predict(qualityLog,type="response")
qualityPredict=predict(QualityLog,type="response")
qualityPredict=predict(model,type="response")
summary(qualityPredict)
tapply(qualityPredict,qualityTrain$PoorCare,mean)
summary(model)
model2=glm(PoorCare~OfficeVisits+Narcotics+StartedOnCombination,data=qualityTrain,family = binomial)
summary(model2)
model2=glm(PoorCare~StartedOnCombination,data=qualityTrain,family = binomial)
summary(model2)
table(qualityTrain$PoorCare,qualityPredict>0.5)
70/74
10/10+14
10/15
10/25
15/25
15/25
install.packages("ROC.R")
install.packages(ROCR)
install.packages("ROCR")
library.packages("ROCR")
library.package("ROCR")
library("ROCR")
ROCRpred=prediction(qualityPredict,qualityTrain$PoorCare)
ROCRperf=perfomance("ROCRpred","tpr","fpr")
ROCRperf=performance("ROCRpred","tpr","fpr")
ROCRperf=performance(ROCRpred,"tpr","fpr")
plot(ROCRperf)
plot(ROCRperf,colorize=TRUE)
plot(ROCRperf,colorize=TRUE,print.cutoffs.at=seq(0,1,0.1),text.adj)
plot(ROCRperf,colorize=TRUE,print.cutoffs.at=seq(0,1,0.1),text.adj=c(-0.2,1.7))
predictTest=predict(log,type="response",newdata="qualitytest")
predictTest=predict(model,type="response",newdata="qualitytest")
predictTest=predict(model,type="response",newdata=qualitytest)
predictTest=predict(model,type="response",newdata=qualityTest)
summary(predictTest)
ROCRpredict=prediction(predictTest,qualityTest$PoorCare)
auc=as.numeric(performance(ROCRpredict,"auc")@y.values)
auc
